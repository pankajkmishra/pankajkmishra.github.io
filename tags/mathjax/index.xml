<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MathJax on Pankaj K Mishra</title>
    <link>https://pankajkmishra.github.io/tags/mathjax/</link>
    <description>Recent content in MathJax on Pankaj K Mishra</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 04 Feb 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://pankajkmishra.github.io/tags/mathjax/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>From Solving Inverse Problems to Training Neural Networks</title>
      <link>https://pankajkmishra.github.io/post/2025/02/04/from-solving-inverse-problems-to-training-neural-networks/</link>
      <pubDate>Tue, 04 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://pankajkmishra.github.io/post/2025/02/04/from-solving-inverse-problems-to-training-neural-networks/</guid>
      <description>From Solving Inverse Problems to Training Neural Networks Step 1: Define the Model The neural network predicts house prices using:&#xA;$$ \hat{y} = w \times \text{Size} + b $$&#xA;where:&#xA;$ w $ is the weight (to be optimized), $ b $ is the bias (to be optimized), $ \text{Size} $ is the input feature (house size in square meters), $ \hat{y} $ is the predicted price. Step 2: Initialize Parameters We start with random initial values:</description>
    </item>
  </channel>
</rss>
